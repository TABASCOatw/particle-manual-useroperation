import type { Chain, Client, Hex, Transport } from "viem";
import type { SmartAccount } from "../../accounts/types.js";
import type { GetAccountParameter, PartialBy, UserOperation } from "../../types/index.js";
import { type SponsorUserOperationMiddleware } from "./prepareUserOperationRequest.js";
export type SendUserOperationParameters<TAccount extends SmartAccount | undefined = SmartAccount | undefined> = {
    userOperation: PartialBy<UserOperation, "nonce" | "sender" | "initCode" | "signature" | "callGasLimit" | "maxFeePerGas" | "maxPriorityFeePerGas" | "preVerificationGas" | "verificationGasLimit" | "paymasterAndData">;
} & GetAccountParameter<TAccount> & SponsorUserOperationMiddleware;
export type SendUserOperationReturnType = Hex;
export declare function sendUserOperation<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartAccount | undefined = SmartAccount | undefined>(client: Client<TTransport, TChain, TAccount>, args: SendUserOperationParameters<TAccount>): Promise<SendUserOperationReturnType>;
//# sourceMappingURL=sendUserOperation.d.ts.map